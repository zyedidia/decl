%{
#include <stdio.h>

#include "riscv64/riscv64.h"
#include "op.h"

// Read a byte from input.
#define YY_INPUT(ctx, buf, result, max_size)      \
{                                                 \
    result = fread(buf, 1, max_size, ctx->input); \
}                                                 \
%}

Top = Insn* !.

Insn = - Label? (
      Directive Comment?
    | Comment
    | Any
) EOL+

Comment = '//' (!EOL .)*

Label = < ([0-9]+ | ID) > ':' - {
    mklabel(strndup(yytext, yyleng));
}

Directive = < '.' (!EOL .)* > - {
    mkdirective(strndup(yytext, yyleng));
}

Any = < (!EOL .)* > {
    if (yyleng > 0)
        mkinsn("%s", yytext);
}

%%

bool
riscv64_parseinit(FILE* input)
{
    yycontext ctx;
    memset(&ctx, 0, sizeof(yycontext));
    ctx.input = input;
    bool success = yyparse(&ctx);
    yyrelease(&ctx);
    return success;
}
