local knit = require("knit")

local src = knit.glob("*.c")
local obj = knit.prefix(knit.extrepl(src, ".c", ".o"), ".")

local cflags = "-O2 -Wall -Wno-unused-function -g"

local obj = {
    leg = knit.prefix(knit.extrepl({
        -- arm64
        "arm64/branch.leg",
        "arm64/guardelim.leg",
        "arm64/loads.leg",
        "arm64/stores.leg",
        "arm64/parse.leg",
        "arm64/poc.leg",
        "arm64/special.leg",
        "arm64/meter.leg",
        "arm64/syscall.leg",
        "arm64/tls.leg",
        -- amd64
        "amd64/parse.leg",
        "amd64/syscall.leg",
        "amd64/special.leg",
        "amd64/branch.leg",
        "amd64/stores.leg",
        "amd64/loads.leg",
        "amd64/decl.leg",
        "amd64/pextelim.leg",
        "amd64/tls.leg",
        -- riscv
        "riscv64/loads.leg",
        "riscv64/stores.leg",
        "riscv64/branch.leg",
        "riscv64/syscall.leg",
        "riscv64/parse.leg",
        "riscv64/special.leg",
    }, ".leg", ".leg.o"), "."),
    c = knit.prefix(knit.extrepl({
        -- arm64
        "arm64/fixup.c",
        "arm64/arm64.c",
        "arm64/flags.c",
        -- amd64
        "amd64/display.c",
        "amd64/amd64.c",
        "amd64/flags.c",
        -- riscv64
        "riscv64/flags.c",
        "riscv64/display.c",
        "riscv64/riscv64.c",
    }, ".c", ".o"), "."),
    common = knit.prefix(knit.extrepl({
        "ht.c", "op.c", "util.c",
    }, ".c", ".o"), "."),
    main = knit.prefix(knit.extrepl({
        "main.c"
    }, ".c", ".o"), "."),
    lib = knit.prefix(knit.extrepl({
        "lib.c"
    }, ".c", ".o"), "."),
}

local emobj = {
    leg = knit.extrepl(obj.leg, ".o", ".em.o"),
    common = knit.extrepl(obj.common, ".o", ".em.o"),
    c = knit.extrepl(obj.c, ".o", ".em.o"),
    lib = knit.extrepl(obj.lib, ".o", ".em.o"),
}

return b{
    $ lfi-leg: $(obj.main) $(obj.common) $(obj.c) $(obj.leg)
        cc $input -o $output

    $ .%.o:D[.%.dep]: %.c
        cc $cflags -MMD -MF $dep -c $input -o $output -I.

    $ lfileg.js: $(emobj.lib) $(emobj.common) $(emobj.c) $(emobj.leg)
        emcc -O2 $input -o $output -s EXPORTED_RUNTIME_METHODS='["cwrap"]' -sSINGLE_FILE
    $ .%.em.o:D[.%.dep]: %.c
        emcc $cflags -MMD -MF $dep -c $input -o $output -I.

    $ install-%:VB: %
        sudo install $input /usr/local/bin
    $ install:VB: install-lfi-leg

    $ test:VB: lfi-leg
        go run test/runtest.go -arch arm64 ./lfi-leg test/arm64/*.s
        go run test/runtest.go -arch amd64 ./lfi-leg test/amd64/*.s
        go run test/runtest.go -arch riscv64 ./lfi-leg test/riscv64/*.s

    include("arm64/Knitfile"),
    include("amd64/Knitfile"),
    include("riscv64/Knitfile")
}
